#!/usr/bin/env python
import json
import getpass
import os

import click
import requests

from cbas.password_providers import get_password
from cbas.auth import obtain_access_token


def get_username(args):
    return args['username'] if args['username'] else getpass.getuser()


def get_sshkey(args):
    ssh_key_path = (args['sshkey']
                    if args['sshkey']
                    else os.path.expanduser('~/.ssh/id_rsa.pub'))
    with open(ssh_key_path, "r") as ssh_key_filehandle:
        return ssh_key_filehandle.read()


@click.group()
def main(**kwargs):
    pass


@main.command()
@click.option('--auth-url')
@click.option('--client-secret')
@click.option('--username')
@click.option('--sshkey')
@click.argument('jumphost')
@click.option('--password-provider')
def upload(**kwargs):
    print(kwargs)
    client_secret = kwargs['client_secret']
    auth_url = kwargs['auth_url']

    username = get_username(kwargs)
    ssh_key = get_sshkey(kwargs)
    password_provider = kwargs['password_provider'] or 'prompt'
    password = get_password(password_provider, username)

    access_token = obtain_access_token(
        auth_url, client_secret, username, password)

    jump_request_header = {'Authorization': 'Bearer ' + access_token,
                           'Content-Type': 'application/json',
                           'Cache-Control': 'no-cache'}
    jump_request_data = json.dumps({"pubkey": ssh_key})
    jump_url = 'https://' + kwargs['jumphost'] + '/create'
    print(jump_url)

    jump_response = requests.post(jump_url,
                                  jump_request_data,
                                  headers=jump_request_header)
    jump_response.raise_for_status()
    print(jump_response.text)


@main.command()
@click.option('--auth-url')
@click.option('--username')
@click.option('--client-secret')
@click.argument('jumphost')
@click.option('--password-provider')
def delete(**kwargs):

    client_secret = kwargs['client_secret']
    auth_url = kwargs['auth_url']

    username = get_username(kwargs)
    password_provider = kwargs.get('password_provider') or 'prompt'
    password = get_password(password_provider, username)

    access_token = obtain_access_token(
        auth_url, client_secret, username, password)

    jump_request_header = {'Authorization': 'Bearer ' + access_token,
                           'Content-Type': 'application/json',
                           'Cache-Control': 'no-cache'}
    jump_url = 'https://' + kwargs['jumphost'] + '/delete'

    jump_response = requests.post(jump_url, headers=jump_request_header)
    jump_response.raise_for_status()

if __name__ == '__main__':
    main()
