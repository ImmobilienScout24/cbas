#!/usr/bin/env python
import json
import os

import click
import requests

from cbas.password_providers import get_password
from cbas.auth_server import obtain_access_token
from cbas.configuration import CBASConfig, DEFAULT_CONFIG_PATH, pass_config
from cbas import log


def get_sshkey(ssh_key_file):
    with open(os.path.expanduser(ssh_key_file), "r") as f:
        return f.read()


@click.group()
@click.option('-d', '--debug', default=False, is_flag=True)
@click.option('-c', '--config',
              type=click.Path(exists=False, file_okay=True, dir_okay=True),
              callback=CBASConfig.read,
              help='The config file/directory to use instead of the default.',
              default=DEFAULT_CONFIG_PATH,
              )
@click.option('--username')
@click.option('--auth-url')
@click.option('--client-secret')
@click.option('--password-provider')
@click.option('--jump-host')
@click.option('--ssh-key-file')
def main(debug, config, **kwargs):
    if debug:
        log.DEBUG = True
    config.inject(kwargs)


@main.command()
@pass_config
def upload(config):
    ssh_key = get_sshkey(config.ssh_key_file)
    password = get_password(config.password_provider, config.username)
    access_token = obtain_access_token(config, password)

    jump_request_header = {'Authorization': 'Bearer ' + access_token,
                           'Content-Type': 'application/json',
                           'Cache-Control': 'no-cache'}
    jump_request_data = json.dumps({"pubkey": ssh_key})
    jump_url = 'https://' + config.jump_host + '/create'

    jump_response = requests.post(jump_url,
                                  jump_request_data,
                                  headers=jump_request_header)
    jump_response.raise_for_status()


@main.command()
@pass_config
def delete(config):
    password = get_password(config.password_provider, config.username)
    access_token = obtain_access_token(config, password)

    jump_request_header = {'Authorization': 'Bearer ' + access_token,
                           'Content-Type': 'application/json',
                           'Cache-Control': 'no-cache'}
    jump_url = 'https://' + config.jump_host + '/delete'

    jump_response = requests.post(jump_url, headers=jump_request_header)
    jump_response.raise_for_status()

if __name__ == '__main__':
    main()
